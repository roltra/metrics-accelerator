<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="unit-test-aggregator-platform-benefits.xml" />
	<munit:before-test name="unit-test-aggregator-platform-benefits-before-test" doc:id="68c0cb88-d1ed-4574-8395-91da7748fb72" >
			<set-variable value="#[MunitTools::getResourceAsString('examples/responses/response-get-platform-benefits.json')]" doc:name="Set Expected Response Payload" doc:id="4c267c4a-708e-4848-aa4d-f98e3d90df41" variableName="expectedResponse" mimeType="application/json" />
			<munit-tools:mock-when doc:name="Mock when POST login request" doc:id="f258d0ab-e579-475e-ae29-7f87c3b6a4a3"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Post Login Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/post-login-response.json')]" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Hierarchy Request" doc:id="40da75a5-ff9c-4757-a222-0c5dc4b49083"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Hierarchy Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-hierarchy-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Environments Request" doc:id="3f6cbfaa-caaa-437e-b652-213e5346013a"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Environments Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-environments-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Applications Request" doc:id="eda0e31e-5a3d-4573-b67b-2c00b1df7ddd"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Applications Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/cloudhub/get-applications-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get APIs Request" doc:id="03869220-5dfc-4215-8f4f-a290db1f342a"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get APIs Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apimanager/get-apis-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get API Policies Request" doc:id="7b1d7bc6-48f0-4428-8d3c-7ed212d65b8b"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get API Policies Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/apimanager/get-api-policies-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Deployments Request"
				doc:id="bf129e7d-da9b-49d6-8415-9829e66d1d80" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Deployments Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-deployments-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when ARM Get Deployment Details"
				doc:id="6c1ed886-77ba-4927-9d16-0f44bcba46ad" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Deployment Details Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/arm/get-deployment-details-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
	</munit:before-test>
	
	<munit:after-test name="unit-test-aggregator-platform-benefits-after-test" doc:id="c83807c4-2ab3-4c6f-8330-ed7787717f6b" >
		<remove-variable doc:name="Remove Variable" doc:id="b0c6b037-b8ba-4c88-9449-de57c322cc65" variableName="expectedResponse"/>
	</munit:after-test>
	
	<munit:test name="get-platform-benefits-test" doc:id="10bb476e-e48f-417d-8c95-d699fdf8bbc2" description="Test">
		<munit:execution >
			<ee:transform doc:name="Set Mocked Attributes" doc:id="5ce998a4-7d6f-41fd-91de-a8b0d9fbadf3" >
				<ee:message >
					<ee:set-attributes resource="dw/mock-platform-benefits-call-attributes.dwl" />
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to get:\business-metrics:api-config" doc:id="dcc7d79b-dba8-4939-b541-ded681f566e8" name="get:\business-metrics:api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="697a1e72-fc73-44a9-a51c-2bb32ca5db82" expression='#[payload map ($ - "date")]' is='#[MunitTools::equalTo(vars.expectedResponse map ($ - "date"))]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>

</mule>
